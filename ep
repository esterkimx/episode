#!/usr/bin/env ruby

require 'optparse'
require_relative 'main'

PROGRAM_NAME = File.basename($PROGRAM_NAME)
CFG_FILENAME = '.episode'

options = {}
opt_parser = 
  OptionParser.new do |opts|
    opts.program_name = PROGRAM_NAME
    opts.version = '0.1'
    opts.banner = <<~EOS
    Usage: #{PROGRAM_NAME} <command> [options]

      Commands:
        last                  Re-play episode watched last time 
        next                  Play next episode
        prev                  Play previous episode (one before 'last') 
        <number>              Same as `#{PROGRAM_NAME} no <number>` (i.e. `#{PROGRAM_NAME} 11`)
        no                    Play episode by number (i.e. `#{PROGRAM_NAME} no 11`) 
        cfg                   Print config for current directory
        reset [param]         Reset config parameter (i.e. `#{PROGRAM_NAME} reset last`)
        set <param> <value>   Set config parameter (i.e. `#{PROGRAM_NAME} set last 11`)
        ls                    List all episodes

      Options for last, next, prev, and num:
    EOS

    opts.on('-n', '--name', "Show episode name, but don't play it") do
      options[:name] = true
    end
    
    opts.on('-o', '--no-update', "Don't update .episode file") do
      options[:update] = false
    end
  end
opt_parser.parse!

unless ARGV[0] 
  $stderr.puts opt_parser.help
  return
end

if ARGV[0] =~ /^\d+$/
  command = 'no'
  args = [ARGV[0]]
else
  command = ARGV[0]
  args = ARGV[1..]
end

begin    
  Main.new(options).send(command, *args)
rescue NoCommandError => e
  $stderr.puts <<~EOS
    Error: Unknown command '#{e.message}'. 
    Run `#{PROGRAM_NAME} -h` to see the list of all available commands.
  EOS
rescue CommandError => e
  $stderr.puts e.message
end
